ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  22              		.type	main, %function
  23              	main:
  24              	.LFB35:
  25              		.file 1 ".\\main.c"
   1:.\main.c      **** /*****************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** * This is the top level application for the PSoC 4 BLE Lab 4.
   8:.\main.c      **** *
   9:.\main.c      **** * Hardware Dependency:
  10:.\main.c      **** * CY8CKIT-042 BLE Pioneer Kit
  11:.\main.c      **** *
  12:.\main.c      **** ******************************************************************************
  13:.\main.c      **** * Copyright (2014), Cypress Semiconductor Corporation.
  14:.\main.c      **** ******************************************************************************
  15:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  16:.\main.c      **** * protected by and subject to worldwide patent protection (United States and
  17:.\main.c      **** * foreign), United States copyright laws and international treaty provisions.
  18:.\main.c      **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  19:.\main.c      **** * license to copy, use, modify, create derivative works of, and compile the
  20:.\main.c      **** * Cypress Source Code and derivative works for the sole purpose of creating
  21:.\main.c      **** * custom software in support of licensee product to be used only in conjunction
  22:.\main.c      **** * with a Cypress integrated circuit as specified in the applicable agreement.
  23:.\main.c      **** * Any reproduction, modification, translation, compilation, or representation of
  24:.\main.c      **** * this software except as specified above is prohibited without the express
  25:.\main.c      **** * written permission of Cypress.
  26:.\main.c      **** *
  27:.\main.c      **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  28:.\main.c      **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  29:.\main.c      **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  30:.\main.c      **** * Cypress reserves the right to make changes without further notice to the
  31:.\main.c      **** * materials described herein. Cypress does not assume any liability arising out
  32:.\main.c      **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 2


  33:.\main.c      **** * does not authorize its products for use as critical components in life-support
  34:.\main.c      **** * systems where a malfunction or failure may reasonably be expected to result in
  35:.\main.c      **** * significant injury to the user. The inclusion of Cypress' product in a life-
  36:.\main.c      **** * support systems application implies that the manufacturer assumes all risk of
  37:.\main.c      **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  38:.\main.c      **** * limited by and subject to the applicable Cypress software license agreement.
  39:.\main.c      **** *****************************************************************************/
  40:.\main.c      **** 
  41:.\main.c      **** 
  42:.\main.c      **** /*****************************************************************************
  43:.\main.c      **** * Included headers
  44:.\main.c      **** *****************************************************************************/
  45:.\main.c      **** #include <main.h>
  46:.\main.c      **** #include <BLEApplications.h>
  47:.\main.c      **** 
  48:.\main.c      **** 
  49:.\main.c      **** /*****************************************************************************
  50:.\main.c      **** * Function Prototypes
  51:.\main.c      **** *****************************************************************************/
  52:.\main.c      **** static void InitializeSystem(void);
  53:.\main.c      **** static void HandleCapSenseSlider(void);
  54:.\main.c      **** 
  55:.\main.c      **** 
  56:.\main.c      **** /*****************************************************************************
  57:.\main.c      **** * Public functions
  58:.\main.c      **** *****************************************************************************/
  59:.\main.c      **** 
  60:.\main.c      **** /*******************************************************************************
  61:.\main.c      **** * Function Name: main
  62:.\main.c      **** ********************************************************************************
  63:.\main.c      **** * Summary:
  64:.\main.c      **** * System entrance point. This calls the initializing function and continuously
  65:.\main.c      **** * process BLE and CapSense events.
  66:.\main.c      **** *
  67:.\main.c      **** * Parameters:
  68:.\main.c      **** *  void
  69:.\main.c      **** *
  70:.\main.c      **** * Return:
  71:.\main.c      **** *  int
  72:.\main.c      **** *
  73:.\main.c      **** *******************************************************************************/
  74:.\main.c      **** int main()
  75:.\main.c      **** {
  26              		.loc 1 75 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
  76:.\main.c      **** 	/* This function will initialize the system resources such as BLE and CapSense */
  77:.\main.c      ****     InitializeSystem();
  34              		.loc 1 77 0
  35 0004 FFF7FEFF 		bl	InitializeSystem
  36              	.L3:
  78:.\main.c      **** 	
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 3


  79:.\main.c      ****     for(;;)
  80:.\main.c      ****     {
  81:.\main.c      ****         /*Process event callback to handle BLE events. The events generated and 
  82:.\main.c      **** 		* used for this application are inside the 'CustomEventHandler' routine*/
  83:.\main.c      ****         CyBle_ProcessEvents();
  37              		.loc 1 83 0
  38 0008 FFF7FEFF 		bl	CyBle_ProcessEvents
  84:.\main.c      **** 		
  85:.\main.c      **** 		if(TRUE == deviceConnected)
  39              		.loc 1 85 0
  40 000c 064B     		ldr	r3, .L4
  41 000e 1B78     		ldrb	r3, [r3]
  42 0010 012B     		cmp	r3, #1
  43 0012 08D1     		bne	.L2
  86:.\main.c      **** 		{
  87:.\main.c      ****             /* When the Client Characteristic Configuration descriptor (CCCD) is
  88:.\main.c      ****              * written by Central device for enabling/disabling notifications, 
  89:.\main.c      ****              * then the same descriptor value has to be explicitly updated in 
  90:.\main.c      ****              * application so that it reflects the correct value when the 
  91:.\main.c      ****              * descriptor is read */
  92:.\main.c      **** 			UpdateNotificationCCCD();
  44              		.loc 1 92 0
  45 0014 FFF7FEFF 		bl	UpdateNotificationCCCD
  93:.\main.c      **** 			
  94:.\main.c      **** 			/* Send CapSense Slider data when respective notification is enabled */
  95:.\main.c      **** 			if(TRUE == sendCapSenseSliderNotifications)
  46              		.loc 1 95 0
  47 0018 044B     		ldr	r3, .L4+4
  48 001a 1B78     		ldrb	r3, [r3]
  49 001c 012B     		cmp	r3, #1
  50 001e 02D1     		bne	.L2
  96:.\main.c      **** 			{
  97:.\main.c      **** 				/* Check for CapSense slider swipe and send data accordingly */
  98:.\main.c      **** 				HandleCapSenseSlider();
  51              		.loc 1 98 0
  52 0020 FFF7FEFF 		bl	HandleCapSenseSlider
  99:.\main.c      **** 			}
 100:.\main.c      **** 		}
 101:.\main.c      ****     }	
  53              		.loc 1 101 0
  54 0024 F0E7     		b	.L3
  55              	.L2:
  56 0026 EFE7     		b	.L3
  57              	.L5:
  58              		.align	2
  59              	.L4:
  60 0028 00000000 		.word	deviceConnected
  61 002c 00000000 		.word	sendCapSenseSliderNotifications
  62              		.cfi_endproc
  63              	.LFE35:
  64              		.size	main, .-main
  65              		.section	.text.InitializeSystem,"ax",%progbits
  66              		.align	2
  67              		.code	16
  68              		.thumb_func
  69              		.type	InitializeSystem, %function
  70              	InitializeSystem:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 4


  71              	.LFB36:
 102:.\main.c      **** }
 103:.\main.c      **** 
 104:.\main.c      **** 
 105:.\main.c      **** /*******************************************************************************
 106:.\main.c      **** * Function Name: InitializeSystem
 107:.\main.c      **** ********************************************************************************
 108:.\main.c      **** * Summary:
 109:.\main.c      **** * Start the components and initialize system.
 110:.\main.c      **** *
 111:.\main.c      **** * Parameters:
 112:.\main.c      **** *  void
 113:.\main.c      **** *
 114:.\main.c      **** * Return:
 115:.\main.c      **** *  void
 116:.\main.c      **** *
 117:.\main.c      **** *******************************************************************************/
 118:.\main.c      **** void InitializeSystem(void)
 119:.\main.c      **** {
  72              		.loc 1 119 0
  73              		.cfi_startproc
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
 120:.\main.c      **** 	/* Enable global interrupt mask */
 121:.\main.c      **** 	CyGlobalIntEnable; 
  80              		.loc 1 121 0
  81              	@ 121 ".\main.c" 1
  82 0004 62B6     		CPSIE   i
  83              	@ 0 "" 2
 122:.\main.c      **** 		
 123:.\main.c      **** 	/* Start BLE component and register the CustomEventHandler function. This 
 124:.\main.c      **** 	 * function exposes the events from BLE component for application use */
 125:.\main.c      ****     CyBle_Start(CustomEventHandler);	
  84              		.loc 1 125 0
  85              		.code	16
  86 0006 124B     		ldr	r3, .L7
  87 0008 181C     		mov	r0, r3
  88 000a FFF7FEFF 		bl	CyBle_Start
 126:.\main.c      ****     
 127:.\main.c      **** 	/* Start both the PrISM components for LED control*/
 128:.\main.c      ****     PRS_1_Start();
  89              		.loc 1 128 0
  90 000e FFF7FEFF 		bl	PRS_1_Start
 129:.\main.c      ****     PRS_2_Start();
  91              		.loc 1 129 0
  92 0012 FFF7FEFF 		bl	PRS_2_Start
 130:.\main.c      **** 	
 131:.\main.c      **** 	/* The RGB LED on BLE Pioneer kit are active low. Drive HIGH on 
 132:.\main.c      **** 	 * pin for OFF and drive LOW on pin for ON*/
 133:.\main.c      **** 	PRS_1_WritePulse0(RGB_LED_OFF);
  93              		.loc 1 133 0
  94 0016 FF20     		mov	r0, #255
  95 0018 FFF7FEFF 		bl	PRS_1_WritePulse0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 5


 134:.\main.c      **** 	PRS_1_WritePulse1(RGB_LED_OFF);
  96              		.loc 1 134 0
  97 001c FF20     		mov	r0, #255
  98 001e FFF7FEFF 		bl	PRS_1_WritePulse1
 135:.\main.c      **** 	PRS_2_WritePulse0(RGB_LED_OFF);
  99              		.loc 1 135 0
 100 0022 FF20     		mov	r0, #255
 101 0024 FFF7FEFF 		bl	PRS_2_WritePulse0
 136:.\main.c      **** 	
 137:.\main.c      **** 	/* Set Drive mode of output pins from HiZ to Strong */
 138:.\main.c      **** 	RED_SetDriveMode(RED_DM_STRONG);
 102              		.loc 1 138 0
 103 0028 0620     		mov	r0, #6
 104 002a FFF7FEFF 		bl	RED_SetDriveMode
 139:.\main.c      **** 	GREEN_SetDriveMode(GREEN_DM_STRONG);
 105              		.loc 1 139 0
 106 002e 0620     		mov	r0, #6
 107 0030 FFF7FEFF 		bl	GREEN_SetDriveMode
 140:.\main.c      **** 	BLUE_SetDriveMode(BLUE_DM_STRONG);
 108              		.loc 1 140 0
 109 0034 0620     		mov	r0, #6
 110 0036 FFF7FEFF 		bl	BLUE_SetDriveMode
 141:.\main.c      **** 	
 142:.\main.c      **** 	/* Initialize CapSense component and initialize baselines*/
 143:.\main.c      **** 	CapSense_Start();
 111              		.loc 1 143 0
 112 003a FFF7FEFF 		bl	CapSense_Start
 144:.\main.c      **** 	CapSense_InitializeAllBaselines();
 113              		.loc 1 144 0
 114 003e FFF7FEFF 		bl	CapSense_InitializeAllBaselines
 145:.\main.c      ****     CapSense_EnableWidget(CapSense_PROXIMITYSENSOR0__PROX);
 115              		.loc 1 145 0
 116 0042 0020     		mov	r0, #0
 117 0044 FFF7FEFF 		bl	CapSense_EnableWidget
 146:.\main.c      ****     
 147:.\main.c      ****     /* Start the Watchdog Timer */
 148:.\main.c      **** 	WatchdogTimer_Start();
 118              		.loc 1 148 0
 119 0048 FFF7FEFF 		bl	WatchdogTimer_Start
 149:.\main.c      **** }
 120              		.loc 1 149 0
 121 004c BD46     		mov	sp, r7
 122              		@ sp needed
 123 004e 80BD     		pop	{r7, pc}
 124              	.L8:
 125              		.align	2
 126              	.L7:
 127 0050 00000000 		.word	CustomEventHandler
 128              		.cfi_endproc
 129              	.LFE36:
 130              		.size	InitializeSystem, .-InitializeSystem
 131              		.section	.text.HandleCapSenseSlider,"ax",%progbits
 132              		.align	2
 133              		.code	16
 134              		.thumb_func
 135              		.type	HandleCapSenseSlider, %function
 136              	HandleCapSenseSlider:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 6


 137              	.LFB37:
 150:.\main.c      **** 
 151:.\main.c      **** 
 152:.\main.c      **** /*******************************************************************************
 153:.\main.c      **** * Function Name: HandleCapSenseSlider
 154:.\main.c      **** ********************************************************************************
 155:.\main.c      **** * Summary:
 156:.\main.c      **** * This function scans for finger position on CapSense slider, and if the  
 157:.\main.c      **** * position is different, triggers separate routine for BLE notification.
 158:.\main.c      **** *
 159:.\main.c      **** * Parameters:
 160:.\main.c      **** *  void
 161:.\main.c      **** *
 162:.\main.c      **** * Return:
 163:.\main.c      **** *  void
 164:.\main.c      **** *
 165:.\main.c      **** *******************************************************************************/
 166:.\main.c      **** void HandleCapSenseSlider(void)
 167:.\main.c      **** {
 138              		.loc 1 167 0
 139              		.cfi_startproc
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 82B0     		sub	sp, sp, #8
 145              		.cfi_def_cfa_offset 16
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 168:.\main.c      **** 	/* Last read CapSense slider position value */
 169:.\main.c      **** 	//static uint16 lastPosition;	
 170:.\main.c      **** 	
 171:.\main.c      **** 	/* Present slider position read by CapSense */
 172:.\main.c      **** 	uint16 sliderPosition;
 173:.\main.c      **** 		
 174:.\main.c      **** 	/* Update CapSense baseline for next reading*/
 175:.\main.c      **** 	CapSense_UpdateEnabledBaselines();	
 148              		.loc 1 175 0
 149 0006 FFF7FEFF 		bl	CapSense_UpdateEnabledBaselines
 176:.\main.c      **** 		
 177:.\main.c      **** 	/* Scan the slider widget */
 178:.\main.c      **** 	CapSense_ScanEnabledWidgets();			
 150              		.loc 1 178 0
 151 000a FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 179:.\main.c      **** 	
 180:.\main.c      **** 	/* Wait for CapSense scanning to be complete. This could take about 5 ms */
 181:.\main.c      **** 	while(CapSense_IsBusy());
 152              		.loc 1 181 0
 153 000e C046     		mov	r8, r8
 154              	.L10:
 155              		.loc 1 181 0 is_stmt 0 discriminator 1
 156 0010 FFF7FEFF 		bl	CapSense_IsBusy
 157 0014 031C     		mov	r3, r0
 158 0016 002B     		cmp	r3, #0
 159 0018 FAD1     		bne	.L10
 182:.\main.c      **** 	
 183:.\main.c      **** 	/* Read the finger position in the Proximity Sensor */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 7


 184:.\main.c      **** 	sliderPosition = CapSense_GetDiffCountData(CapSense_PROXIMITYSENSOR0__PROX);
 160              		.loc 1 184 0 is_stmt 1
 161 001a 0020     		mov	r0, #0
 162 001c FFF7FEFF 		bl	CapSense_GetDiffCountData
 163 0020 031C     		mov	r3, r0
 164 0022 1A1C     		mov	r2, r3
 165 0024 BB1D     		add	r3, r7, #6
 166 0026 1A80     		strh	r2, [r3]
 185:.\main.c      ****     /*Continously sends notifications */
 186:.\main.c      ****     SendCapSenseNotification((uint8)sliderPosition);
 167              		.loc 1 186 0
 168 0028 BB1D     		add	r3, r7, #6
 169 002a 1B88     		ldrh	r3, [r3]
 170 002c DBB2     		uxtb	r3, r3
 171 002e 181C     		mov	r0, r3
 172 0030 FFF7FEFF 		bl	SendCapSenseNotification
 187:.\main.c      ****     
 188:.\main.c      **** 
 189:.\main.c      **** 	/*If finger is detected on the slider*/
 190:.\main.c      **** 	//if((sliderPosition != NO_FINGER) && (sliderPosition <= SLIDER_MAX_VALUE))
 191:.\main.c      **** 	{
 192:.\main.c      ****         /* If finger position on the slider is changed then send data as BLE 
 193:.\main.c      ****          * notifications */
 194:.\main.c      ****         //if(sliderPosition != lastPosition)
 195:.\main.c      **** 		{
 196:.\main.c      **** 			/* Update global variable with present finger position on slider*/
 197:.\main.c      **** 			//lastPosition = sliderPosition;
 198:.\main.c      **** 
 199:.\main.c      **** 			//SendCapSenseNotification((uint8)sliderPosition);
 200:.\main.c      **** 
 201:.\main.c      **** 		}	
 202:.\main.c      **** 	}
 203:.\main.c      **** }
 173              		.loc 1 203 0
 174 0034 BD46     		mov	sp, r7
 175 0036 02B0     		add	sp, sp, #8
 176              		@ sp needed
 177 0038 80BD     		pop	{r7, pc}
 178              		.cfi_endproc
 179              	.LFE37:
 180              		.size	HandleCapSenseSlider, .-HandleCapSenseSlider
 181 003a C046     		.text
 182              	.Letext0:
 183              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 184              		.file 3 "./BLEApplications.h"
 185              		.section	.debug_info,"",%progbits
 186              	.Ldebug_info0:
 187 0000 0C010000 		.4byte	0x10c
 188 0004 0400     		.2byte	0x4
 189 0006 00000000 		.4byte	.Ldebug_abbrev0
 190 000a 04       		.byte	0x4
 191 000b 01       		.uleb128 0x1
 192 000c ED000000 		.4byte	.LASF19
 193 0010 01       		.byte	0x1
 194 0011 DD000000 		.4byte	.LASF20
 195 0015 69010000 		.4byte	.LASF21
 196 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 8


 197 001d 00000000 		.4byte	0
 198 0021 00000000 		.4byte	.Ldebug_line0
 199 0025 02       		.uleb128 0x2
 200 0026 01       		.byte	0x1
 201 0027 06       		.byte	0x6
 202 0028 BC010000 		.4byte	.LASF0
 203 002c 02       		.uleb128 0x2
 204 002d 01       		.byte	0x1
 205 002e 08       		.byte	0x8
 206 002f B1000000 		.4byte	.LASF1
 207 0033 02       		.uleb128 0x2
 208 0034 02       		.byte	0x2
 209 0035 05       		.byte	0x5
 210 0036 E2010000 		.4byte	.LASF2
 211 003a 02       		.uleb128 0x2
 212 003b 02       		.byte	0x2
 213 003c 07       		.byte	0x7
 214 003d 0E000000 		.4byte	.LASF3
 215 0041 02       		.uleb128 0x2
 216 0042 04       		.byte	0x4
 217 0043 05       		.byte	0x5
 218 0044 D4000000 		.4byte	.LASF4
 219 0048 02       		.uleb128 0x2
 220 0049 04       		.byte	0x4
 221 004a 07       		.byte	0x7
 222 004b 72000000 		.4byte	.LASF5
 223 004f 02       		.uleb128 0x2
 224 0050 08       		.byte	0x8
 225 0051 05       		.byte	0x5
 226 0052 00000000 		.4byte	.LASF6
 227 0056 02       		.uleb128 0x2
 228 0057 08       		.byte	0x8
 229 0058 07       		.byte	0x7
 230 0059 84000000 		.4byte	.LASF7
 231 005d 03       		.uleb128 0x3
 232 005e 04       		.byte	0x4
 233 005f 05       		.byte	0x5
 234 0060 696E7400 		.ascii	"int\000"
 235 0064 02       		.uleb128 0x2
 236 0065 04       		.byte	0x4
 237 0066 07       		.byte	0x7
 238 0067 21000000 		.4byte	.LASF8
 239 006b 04       		.uleb128 0x4
 240 006c B6010000 		.4byte	.LASF9
 241 0070 02       		.byte	0x2
 242 0071 A1       		.byte	0xa1
 243 0072 2C000000 		.4byte	0x2c
 244 0076 04       		.uleb128 0x4
 245 0077 EC010000 		.4byte	.LASF10
 246 007b 02       		.byte	0x2
 247 007c A2       		.byte	0xa2
 248 007d 3A000000 		.4byte	0x3a
 249 0081 02       		.uleb128 0x2
 250 0082 04       		.byte	0x4
 251 0083 04       		.byte	0x4
 252 0084 DC010000 		.4byte	.LASF11
 253 0088 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 9


 254 0089 08       		.byte	0x8
 255 008a 04       		.byte	0x4
 256 008b E6000000 		.4byte	.LASF12
 257 008f 02       		.uleb128 0x2
 258 0090 01       		.byte	0x1
 259 0091 08       		.byte	0x8
 260 0092 AC000000 		.4byte	.LASF13
 261 0096 02       		.uleb128 0x2
 262 0097 04       		.byte	0x4
 263 0098 07       		.byte	0x7
 264 0099 F3010000 		.4byte	.LASF14
 265 009d 05       		.uleb128 0x5
 266 009e BF000000 		.4byte	.LASF22
 267 00a2 01       		.byte	0x1
 268 00a3 4A       		.byte	0x4a
 269 00a4 5D000000 		.4byte	0x5d
 270 00a8 00000000 		.4byte	.LFB35
 271 00ac 30000000 		.4byte	.LFE35-.LFB35
 272 00b0 01       		.uleb128 0x1
 273 00b1 9C       		.byte	0x9c
 274 00b2 06       		.uleb128 0x6
 275 00b3 9B000000 		.4byte	.LASF15
 276 00b7 01       		.byte	0x1
 277 00b8 76       		.byte	0x76
 278 00b9 00000000 		.4byte	.LFB36
 279 00bd 54000000 		.4byte	.LFE36-.LFB36
 280 00c1 01       		.uleb128 0x1
 281 00c2 9C       		.byte	0x9c
 282 00c3 D5000000 		.4byte	0xd5
 283 00c7 07       		.uleb128 0x7
 284 00c8 C8010000 		.4byte	.LASF23
 285 00cc 01       		.byte	0x1
 286 00cd 94       		.byte	0x94
 287 00ce 5D000000 		.4byte	0x5d
 288 00d2 08       		.uleb128 0x8
 289 00d3 00       		.byte	0
 290 00d4 00       		.byte	0
 291 00d5 06       		.uleb128 0x6
 292 00d6 5D000000 		.4byte	.LASF16
 293 00da 01       		.byte	0x1
 294 00db A6       		.byte	0xa6
 295 00dc 00000000 		.4byte	.LFB37
 296 00e0 3A000000 		.4byte	.LFE37-.LFB37
 297 00e4 01       		.uleb128 0x1
 298 00e5 9C       		.byte	0x9c
 299 00e6 F9000000 		.4byte	0xf9
 300 00ea 09       		.uleb128 0x9
 301 00eb 4E000000 		.4byte	.LASF24
 302 00ef 01       		.byte	0x1
 303 00f0 AC       		.byte	0xac
 304 00f1 76000000 		.4byte	0x76
 305 00f5 02       		.uleb128 0x2
 306 00f6 91       		.byte	0x91
 307 00f7 76       		.sleb128 -10
 308 00f8 00       		.byte	0
 309 00f9 0A       		.uleb128 0xa
 310 00fa C4000000 		.4byte	.LASF17
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 10


 311 00fe 03       		.byte	0x3
 312 00ff 55       		.byte	0x55
 313 0100 6B000000 		.4byte	0x6b
 314 0104 0A       		.uleb128 0xa
 315 0105 2E000000 		.4byte	.LASF18
 316 0109 03       		.byte	0x3
 317 010a 56       		.byte	0x56
 318 010b 6B000000 		.4byte	0x6b
 319 010f 00       		.byte	0
 320              		.section	.debug_abbrev,"",%progbits
 321              	.Ldebug_abbrev0:
 322 0000 01       		.uleb128 0x1
 323 0001 11       		.uleb128 0x11
 324 0002 01       		.byte	0x1
 325 0003 25       		.uleb128 0x25
 326 0004 0E       		.uleb128 0xe
 327 0005 13       		.uleb128 0x13
 328 0006 0B       		.uleb128 0xb
 329 0007 03       		.uleb128 0x3
 330 0008 0E       		.uleb128 0xe
 331 0009 1B       		.uleb128 0x1b
 332 000a 0E       		.uleb128 0xe
 333 000b 55       		.uleb128 0x55
 334 000c 17       		.uleb128 0x17
 335 000d 11       		.uleb128 0x11
 336 000e 01       		.uleb128 0x1
 337 000f 10       		.uleb128 0x10
 338 0010 17       		.uleb128 0x17
 339 0011 00       		.byte	0
 340 0012 00       		.byte	0
 341 0013 02       		.uleb128 0x2
 342 0014 24       		.uleb128 0x24
 343 0015 00       		.byte	0
 344 0016 0B       		.uleb128 0xb
 345 0017 0B       		.uleb128 0xb
 346 0018 3E       		.uleb128 0x3e
 347 0019 0B       		.uleb128 0xb
 348 001a 03       		.uleb128 0x3
 349 001b 0E       		.uleb128 0xe
 350 001c 00       		.byte	0
 351 001d 00       		.byte	0
 352 001e 03       		.uleb128 0x3
 353 001f 24       		.uleb128 0x24
 354 0020 00       		.byte	0
 355 0021 0B       		.uleb128 0xb
 356 0022 0B       		.uleb128 0xb
 357 0023 3E       		.uleb128 0x3e
 358 0024 0B       		.uleb128 0xb
 359 0025 03       		.uleb128 0x3
 360 0026 08       		.uleb128 0x8
 361 0027 00       		.byte	0
 362 0028 00       		.byte	0
 363 0029 04       		.uleb128 0x4
 364 002a 16       		.uleb128 0x16
 365 002b 00       		.byte	0
 366 002c 03       		.uleb128 0x3
 367 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 11


 368 002e 3A       		.uleb128 0x3a
 369 002f 0B       		.uleb128 0xb
 370 0030 3B       		.uleb128 0x3b
 371 0031 0B       		.uleb128 0xb
 372 0032 49       		.uleb128 0x49
 373 0033 13       		.uleb128 0x13
 374 0034 00       		.byte	0
 375 0035 00       		.byte	0
 376 0036 05       		.uleb128 0x5
 377 0037 2E       		.uleb128 0x2e
 378 0038 00       		.byte	0
 379 0039 3F       		.uleb128 0x3f
 380 003a 19       		.uleb128 0x19
 381 003b 03       		.uleb128 0x3
 382 003c 0E       		.uleb128 0xe
 383 003d 3A       		.uleb128 0x3a
 384 003e 0B       		.uleb128 0xb
 385 003f 3B       		.uleb128 0x3b
 386 0040 0B       		.uleb128 0xb
 387 0041 49       		.uleb128 0x49
 388 0042 13       		.uleb128 0x13
 389 0043 11       		.uleb128 0x11
 390 0044 01       		.uleb128 0x1
 391 0045 12       		.uleb128 0x12
 392 0046 06       		.uleb128 0x6
 393 0047 40       		.uleb128 0x40
 394 0048 18       		.uleb128 0x18
 395 0049 9642     		.uleb128 0x2116
 396 004b 19       		.uleb128 0x19
 397 004c 00       		.byte	0
 398 004d 00       		.byte	0
 399 004e 06       		.uleb128 0x6
 400 004f 2E       		.uleb128 0x2e
 401 0050 01       		.byte	0x1
 402 0051 03       		.uleb128 0x3
 403 0052 0E       		.uleb128 0xe
 404 0053 3A       		.uleb128 0x3a
 405 0054 0B       		.uleb128 0xb
 406 0055 3B       		.uleb128 0x3b
 407 0056 0B       		.uleb128 0xb
 408 0057 27       		.uleb128 0x27
 409 0058 19       		.uleb128 0x19
 410 0059 11       		.uleb128 0x11
 411 005a 01       		.uleb128 0x1
 412 005b 12       		.uleb128 0x12
 413 005c 06       		.uleb128 0x6
 414 005d 40       		.uleb128 0x40
 415 005e 18       		.uleb128 0x18
 416 005f 9642     		.uleb128 0x2116
 417 0061 19       		.uleb128 0x19
 418 0062 01       		.uleb128 0x1
 419 0063 13       		.uleb128 0x13
 420 0064 00       		.byte	0
 421 0065 00       		.byte	0
 422 0066 07       		.uleb128 0x7
 423 0067 2E       		.uleb128 0x2e
 424 0068 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 12


 425 0069 3F       		.uleb128 0x3f
 426 006a 19       		.uleb128 0x19
 427 006b 03       		.uleb128 0x3
 428 006c 0E       		.uleb128 0xe
 429 006d 3A       		.uleb128 0x3a
 430 006e 0B       		.uleb128 0xb
 431 006f 3B       		.uleb128 0x3b
 432 0070 0B       		.uleb128 0xb
 433 0071 49       		.uleb128 0x49
 434 0072 13       		.uleb128 0x13
 435 0073 3C       		.uleb128 0x3c
 436 0074 19       		.uleb128 0x19
 437 0075 00       		.byte	0
 438 0076 00       		.byte	0
 439 0077 08       		.uleb128 0x8
 440 0078 18       		.uleb128 0x18
 441 0079 00       		.byte	0
 442 007a 00       		.byte	0
 443 007b 00       		.byte	0
 444 007c 09       		.uleb128 0x9
 445 007d 34       		.uleb128 0x34
 446 007e 00       		.byte	0
 447 007f 03       		.uleb128 0x3
 448 0080 0E       		.uleb128 0xe
 449 0081 3A       		.uleb128 0x3a
 450 0082 0B       		.uleb128 0xb
 451 0083 3B       		.uleb128 0x3b
 452 0084 0B       		.uleb128 0xb
 453 0085 49       		.uleb128 0x49
 454 0086 13       		.uleb128 0x13
 455 0087 02       		.uleb128 0x2
 456 0088 18       		.uleb128 0x18
 457 0089 00       		.byte	0
 458 008a 00       		.byte	0
 459 008b 0A       		.uleb128 0xa
 460 008c 34       		.uleb128 0x34
 461 008d 00       		.byte	0
 462 008e 03       		.uleb128 0x3
 463 008f 0E       		.uleb128 0xe
 464 0090 3A       		.uleb128 0x3a
 465 0091 0B       		.uleb128 0xb
 466 0092 3B       		.uleb128 0x3b
 467 0093 0B       		.uleb128 0xb
 468 0094 49       		.uleb128 0x49
 469 0095 13       		.uleb128 0x13
 470 0096 3F       		.uleb128 0x3f
 471 0097 19       		.uleb128 0x19
 472 0098 3C       		.uleb128 0x3c
 473 0099 19       		.uleb128 0x19
 474 009a 00       		.byte	0
 475 009b 00       		.byte	0
 476 009c 00       		.byte	0
 477              		.section	.debug_aranges,"",%progbits
 478 0000 2C000000 		.4byte	0x2c
 479 0004 0200     		.2byte	0x2
 480 0006 00000000 		.4byte	.Ldebug_info0
 481 000a 04       		.byte	0x4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 13


 482 000b 00       		.byte	0
 483 000c 0000     		.2byte	0
 484 000e 0000     		.2byte	0
 485 0010 00000000 		.4byte	.LFB35
 486 0014 30000000 		.4byte	.LFE35-.LFB35
 487 0018 00000000 		.4byte	.LFB36
 488 001c 54000000 		.4byte	.LFE36-.LFB36
 489 0020 00000000 		.4byte	.LFB37
 490 0024 3A000000 		.4byte	.LFE37-.LFB37
 491 0028 00000000 		.4byte	0
 492 002c 00000000 		.4byte	0
 493              		.section	.debug_ranges,"",%progbits
 494              	.Ldebug_ranges0:
 495 0000 00000000 		.4byte	.LFB35
 496 0004 30000000 		.4byte	.LFE35
 497 0008 00000000 		.4byte	.LFB36
 498 000c 54000000 		.4byte	.LFE36
 499 0010 00000000 		.4byte	.LFB37
 500 0014 3A000000 		.4byte	.LFE37
 501 0018 00000000 		.4byte	0
 502 001c 00000000 		.4byte	0
 503              		.section	.debug_line,"",%progbits
 504              	.Ldebug_line0:
 505 0000 B7000000 		.section	.debug_str,"MS",%progbits,1
 505      02005C00 
 505      00000201 
 505      FB0E0D00 
 505      01010101 
 506              	.LASF6:
 507 0000 6C6F6E67 		.ascii	"long long int\000"
 507      206C6F6E 
 507      6720696E 
 507      7400
 508              	.LASF3:
 509 000e 73686F72 		.ascii	"short unsigned int\000"
 509      7420756E 
 509      7369676E 
 509      65642069 
 509      6E7400
 510              	.LASF8:
 511 0021 756E7369 		.ascii	"unsigned int\000"
 511      676E6564 
 511      20696E74 
 511      00
 512              	.LASF18:
 513 002e 73656E64 		.ascii	"sendCapSenseSliderNotifications\000"
 513      43617053 
 513      656E7365 
 513      536C6964 
 513      65724E6F 
 514              	.LASF24:
 515 004e 736C6964 		.ascii	"sliderPosition\000"
 515      6572506F 
 515      73697469 
 515      6F6E00
 516              	.LASF16:
 517 005d 48616E64 		.ascii	"HandleCapSenseSlider\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 14


 517      6C654361 
 517      7053656E 
 517      7365536C 
 517      69646572 
 518              	.LASF5:
 519 0072 6C6F6E67 		.ascii	"long unsigned int\000"
 519      20756E73 
 519      69676E65 
 519      6420696E 
 519      7400
 520              	.LASF7:
 521 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 521      206C6F6E 
 521      6720756E 
 521      7369676E 
 521      65642069 
 522              	.LASF15:
 523 009b 496E6974 		.ascii	"InitializeSystem\000"
 523      69616C69 
 523      7A655379 
 523      7374656D 
 523      00
 524              	.LASF13:
 525 00ac 63686172 		.ascii	"char\000"
 525      00
 526              	.LASF1:
 527 00b1 756E7369 		.ascii	"unsigned char\000"
 527      676E6564 
 527      20636861 
 527      7200
 528              	.LASF22:
 529 00bf 6D61696E 		.ascii	"main\000"
 529      00
 530              	.LASF17:
 531 00c4 64657669 		.ascii	"deviceConnected\000"
 531      6365436F 
 531      6E6E6563 
 531      74656400 
 532              	.LASF4:
 533 00d4 6C6F6E67 		.ascii	"long int\000"
 533      20696E74 
 533      00
 534              	.LASF20:
 535 00dd 2E5C6D61 		.ascii	".\\main.c\000"
 535      696E2E63 
 535      00
 536              	.LASF12:
 537 00e6 646F7562 		.ascii	"double\000"
 537      6C6500
 538              	.LASF19:
 539 00ed 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 539      4320342E 
 539      382E3420 
 539      32303134 
 539      30353236 
 540 0120 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 540      20726576 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cchLGgjI.s 			page 15


 540      6973696F 
 540      6E203231 
 540      31333538 
 541 0153 30202D66 		.ascii	"0 -ffunction-sections\000"
 541      66756E63 
 541      74696F6E 
 541      2D736563 
 541      74696F6E 
 542              	.LASF21:
 543 0169 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\GitHub\\EECE-721-Lab-4\\"
 543      73657273 
 543      5C41646D 
 543      696E5C44 
 543      65736B74 
 544 0196 4C616220 		.ascii	"Lab 4\\BLE Lab 4\\BLE Lab 4.cydsn\000"
 544      345C424C 
 544      45204C61 
 544      6220345C 
 544      424C4520 
 545              	.LASF9:
 546 01b6 75696E74 		.ascii	"uint8\000"
 546      3800
 547              	.LASF0:
 548 01bc 7369676E 		.ascii	"signed char\000"
 548      65642063 
 548      68617200 
 549              	.LASF23:
 550 01c8 57617463 		.ascii	"WatchdogTimer_Start\000"
 550      68646F67 
 550      54696D65 
 550      725F5374 
 550      61727400 
 551              	.LASF11:
 552 01dc 666C6F61 		.ascii	"float\000"
 552      7400
 553              	.LASF2:
 554 01e2 73686F72 		.ascii	"short int\000"
 554      7420696E 
 554      7400
 555              	.LASF10:
 556 01ec 75696E74 		.ascii	"uint16\000"
 556      313600
 557              	.LASF14:
 558 01f3 73697A65 		.ascii	"sizetype\000"
 558      74797065 
 558      00
 559              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
